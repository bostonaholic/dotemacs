#+TITLE: DotEmacs
#+Author: Matthew Boston

* Table of Contents :TOC:
- [[#bootstrap][Bootstrap]]
  - [[#use-better-defaults][Use better defaults]]

* Bootstrap

** Use better defaults

Maximize by default.

#+BEGIN_SRC emacs-lisp
(set-frame-parameter nil 'fullscreen 'maximized)
#+END_SRC

Some UI elements are rather invasive.

#+BEGIN_SRC emacs-lisp
(when window-system
  (blink-cursor-mode 0)                            ; Disable the cursor blinking
  (horizontal-scroll-bar-mode 0)                   ; Disable the horizontal scroll bar
  (scroll-bar-mode 0)                              ; Disable the scroll bar
  (tool-bar-mode 0)                                ; Disable the tool bar
  (tooltip-mode 0))                                ; Disable the tooltips
#+END_SRC

More better defaults.

#+BEGIN_SRC emacs-lisp
(setq-default
 ad-redefinition-action 'accept                    ; Silence warnings for redefinition
 confirm-kill-emacs 'yes-or-no-p                   ; Confirm before exiting Emacs
 cursor-in-non-selected-windows t                  ; Hide the cursor in inactive windows
 delete-by-moving-to-trash t                       ; Delete files to trash
 display-time-default-load-average nil             ; Don't display load average
 display-time-format "%H:%M"                       ; Format the time string
 fill-column 80                                    ; Set width for automatic line breaks
 help-window-select t                              ; Focus new help windows when opened
 indent-tabs-mode nil                              ; Stop using tabs to indent
 inhibit-startup-screen t                          ; Disable start-up screen
 initial-scratch-message ""                        ; Empty the initial *scratch* buffer
 kill-whole-line t                                 ; Kill whole lines
 large-file-warning-threshold 100000000            ; Warn before opening large files
 left-margin-width 1 right-margin-width 1          ; Add left and right margins
 linum-format " %3i "                              ; Format line numbers
 mode-require-final-newline 'visit                 ; Add a newline at EOF on visit
 mouse-yank-at-point t                             ; Yank at point rather than pointer
 ns-use-srgb-colorspace nil                        ; Don't use sRGB colors
 recenter-positions '(5 top bottom)                ; Set re-centering positions
 ring-bell-function 'ignore                        ; Ignore the bell
 scroll-conservatively most-positive-fixnum        ; Always scroll by one line
 scroll-margin 10                                  ; Add a margin when scrolling vertically
 select-enable-clipboard t                         ; Merge system's and Emacs' clipboard
 sentence-end-double-space nil                     ; End a sentence after a dot and a space
 show-trailing-whitespace nil                      ; Display trailing whitespaces
 split-height-threshold nil                        ; Disable vertical window splitting
 split-width-threshold nil                         ; Disable horizontal window splitting
 tab-width 4                                       ; Set width for tabs
 uniquify-buffer-name-style 'forward               ; Uniquify buffer names
 vc-follow-symlinks t                              ; Follow symlinks under version control
 visible-bell nil                                  ; Do not show the visible bell
 whitespace-style '(face trailing lines-tail tabs) ; Show trailing whitespace
 window-combination-resize t                       ; Resize windows proportionally
 x-stretch-cursor t)                               ; Stretch cursor to the glyph width
(delete-selection-mode)                            ; Replace region when inserting text
(fringe-mode 0)                                    ; Hide fringes
(fset 'yes-or-no-p 'y-or-n-p)                      ; Replace yes/no prompts with y/n
(global-hl-line-mode)                              ; Hightlight current line
(global-subword-mode)                              ; Iterate through CamelCase words
(menu-bar-mode 0)                                  ; Disable the menu bar
(mouse-avoidance-mode 'banish)                     ; Avoid collision of mouse with point
(put 'downcase-region 'disabled nil)               ; Enable downcase-region
(put 'upcase-region 'disabled nil)                 ; Enable upcase-region
#+END_SRC

Garbage collect on focus-out.

#+BEGIN_SRC emacs-lisp
(add-hook 'focus-out-hook #'garbage-collect)
#+END_SRC
